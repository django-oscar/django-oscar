name: appmap-analysis

on:
  pull_request:
  push:
    branches:
      - main # Change this to the name of the mainline branch
  schedule:
    - cron: '0 0 * * 0'

permissions:
  # Read the baseline artifact in order to perform the AppMap comparison.
  actions: read
  # Commit the AppMap configuration.
  # If the EndBug/add-and-commit is removed, this can be changed to 'read'.
  contents: write
  # Add check annotations to the source code when a problem is detected.
  checks: write
  # Add a comment to the pull request.
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
        cache: 'pip'
    
    - name: Update Pip
      run: python -m pip install --upgrade pip
    - name: Install Pip Test Packages
      run: pip install -e .[test]
    - name: Install requirements.txt
      run: pip install -r requirements.txt

    - name: Install AppMap tools
      uses: getappmap/install-action@v1
      with:
        install-appmap-library: false
        
    - name: Run tests
      env:
        DATABASE_USER: postgres
        DATABASE_PASSWORD: postgres
        DATABASE_HOST: localhost
        DATABASE_PORT: 5432
      run: |
        pytest

    - name: Archive AppMaps
      uses: getappmap/archive-action@v1
      with:
        revision: ${{ github.event.pull_request.base.sha }}