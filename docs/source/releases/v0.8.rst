===========================================
Oscar 0.8 release notes - UNDER DEVELOPMENT
===========================================

Welcome to Oscar 0.8!

Table of contents:

.. contents::
    :local:
    :depth: 1

.. _overview_of_0.8:

Overview
========

Oscar now has a demo site customised for the US!

.. _compatibility_of_0.8:

Compatibility
=============

Oscar 0.8 is compatible with Django 1.5-1.7. 

Support for Python 2.6 has been dropped; Oscar works with Python 2.7, 3.3
and 3.4.

.. _new_in_0.8:

What's new in Oscar 0.8?
========================

Minor cleanup around shipping methods
-------------------------------------

* The models of the shipping app now have abstract base classes, similar to
  the rest of Oscar.

* The legacy ``ShippingMethod`` name of the interface of the shipping app has
  been removed. Inherit from ``shipping.base.Base`` for the class instead, and
  inherit from ``shipping.abstract_models.AbstractBase`` for model-based
  shipping methods.

* ``oscar.apps.shipping.Scales`` has been renamed and moved to
  ``oscar.apps.shipping.scales.Scale``, and is now overridable.

* ``WeightBand.upper_limit`` is now a ``DecimalField``, just like the other
  weight-related fields.

Customisation improvements
--------------------------

Oscar's views are now dynamically imported. This means that they can be
overridden like most other classes in Oscar; overriding the related
Application instance is not necessary any more. Updated instructions are
available in :doc:`/topics/customisation`.

US demo site
------------

To help developers building sites for the US, a new example Oscar site has been
included in the repo. This customises core Oscar to treat all prices as
excluding tax and then calculate and apply taxes once the shipping address is
known.

See :ref:`us_site` for more information.

.. _minor_changes_in_0.8:

Minor changes
-------------

* The ``OSCAR_CURRENCY_LOCALE`` setting has been removed. The locale is now
  automatically determined from the current language. This ensures prices are
  always shown in the correct format when switching languages.

* The login and registration view now redirects staff users to the dashboard
  after logging in. It also employs flash messages to welcome returning and
  newly registered users.

* The basket middleware now assigns a ``basket_hash`` attribute to the
  ``request`` instance. This provides a hook for basket caching.

Bugfixes
~~~~~~~~

.. _incompatible_changes_in_0.8:

Backwards incompatible changes in 0.8
=====================================

* The ``shipping`` app saw a few renames; please see the section above.

Basket line stockrecords
------------------------

The basket line model got a reference to the stockrecord in Oscar 0.6. The
basket middleware since then updated basket lines to have stockrecords if
one was missing. If any lines are still missing a stockrecord, we'd expect them
to be from from submitted baskets or from old, abandoned baskets.
This updating of basket lines has been removed for 0.8 as it incurs additional
database queries. Oscar 0.8 now also enforces the stockrecord by making it
the ``stockrecord`` field of basket ``Line`` model no longer nullable.

There is a migration that makes the appropriate schema change but, before that
runs, you may need to clean up your ``basket_line`` table to ensure that all
existing null values are replaced or removed.

Here's a simple script you could run before upgrading which should ensure there
are no nulls in your ``basket_line`` table:

.. code-block:: python

    from oscar.apps.basket import models
    from oscar.apps.partner.strategy import Selector

    strategy = Selector().strategy()

    lines = models.Line.objects.filter(stockrecord__isnull=True):
    for line in lines:
        info = strategy.fetch_for_product(line.product)
        if line.stockrecord:
            line.stockrecord = info.stockrecord
            line.save()
        else:
            line.delete()

.. _removal_of_deprecated_features:

Migrations
~~~~~~~~~~

* Shipping:

    - ``0007`` - Change ``WeightBand.upper_limit`` from ``FloatField`` to ``DecimalField``

.. _deprecated_features:

Features deprecated in 0.8
==========================
